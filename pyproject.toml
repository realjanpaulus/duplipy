[tool.poetry]
name = "duplipy"
version = "0.1.0"
description = "Text duplicate detection."
authors = ["Jan Paulus <janpaulus95@web.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
simhash = "^2.1.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
notebook = "^6.5.2"

[tool.poetry.group.tooling.dependencies]
pre-commit = "^2.20.0"

[tool.poetry.group.misc.dependencies]
black = "^22.10.0"
isort = "^5.10.1"
pycln = "^2.1.1"
pydocstyle = "^6.1.1"

[tool.black]
line-length = 99

[tool.isort]
include_trailing_comma = true
line_length = 99
multi_line_output = 3
use_parentheses = true
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "DUPLIPY",
  "LOCALFOLDER",
]

[tool.pycln]
all = true
exclude = "__init__.py"

[tool.pydocstyle]
# D100: Missing docstring in public module
# D104: Missing docstring in public package
# D202: No blank lines allowed after function docstring
add-ignore = "D100,D104,D202"
convention = "numpy"
# Excluding all .py-files, starting with 'test_'. Approach taken from:
# https://github.com/PyCQA/pydocstyle/issues/553#issuecomment-1076755300
match = '((?!test_).)*\.py'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
